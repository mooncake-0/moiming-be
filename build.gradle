buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.6'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'

    // QueryDsl 추가
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.peoplein'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    google()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'junit:junit:4.13.1'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'

    // JWT 토큰 라이브러리
    implementation 'com.auth0:java-jwt:4.2.1'

    // Swagger API Lib
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'

    // QueryDsl 추가
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}"

    // Java 8 직렬화 해결
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation 'com.fasterxml.jackson.core:jackson-databind'

    // Test 환경
//	runtimeOnly 'com.h2database:h2'

    // FCM 환경
    implementation 'com.google.firebase:firebase-admin:9.1.1'
    implementation 'com.google.firebase:firebase-messaging:22.0.0'

    // Http 요청 Library (OkHttp)
    implementation 'com.squareup.okhttp3:okhttp:4.9.3'

    // https://mvnrepository.com/artifact/org.mockito/mockito-core
    testImplementation 'org.mockito:mockito-core'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.10.0'

    // https://mvnrepository.com/artifact/org.testcontainers/junit-jupiter
    testImplementation 'org.testcontainers:junit-jupiter:1.17.6'
    testImplementation 'org.testcontainers:mysql:1.17.6'

    testRuntimeOnly 'com.mysql:mysql-connector-j'
//	untimeOnly 'com.mysql:mysql-connector-j'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator:2.7.6'
    // https://mvnrepository.com/artifact/io.micrometer/micrometer-registry-prometheus
    implementation 'io.micrometer:micrometer-registry-prometheus:1.11.2'



}

tasks.named('test') {
    useJUnitPlatform()
}

// QueryDsl 추가
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

jar {
    archiveFileName = 'moiming.jar'
}

task moveJar(type: Copy) {
    // JAR 파일을 옮길 위치 설정
    from jar.archiveFile
    into 'docker/'
}

build.dependsOn(moveJar)